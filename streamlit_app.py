import streamlit as st
from PIL import Image, ImageDraw, ImageFont
from streamlit_image_coordinates import streamlit_image_coordinates
import io, zipfile, os

APP_VERSION = "v1.0.3"
DEFAULT_THAI_FONT = "default_thai_font.ttf"

st.set_page_config(page_title="Product Frame Generator", layout="centered")
st.title(f"üñº Product Frame Generator  \n:gray[‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô {APP_VERSION}]")
st.caption("‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏†‡∏≤‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏™‡πà‡∏Å‡∏£‡∏≠‡∏ö ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏´‡∏±‡∏™ ‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏ß‡πá‡∏ö‡πÅ‡∏≠‡∏õ‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢‡πÜ (‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö Manual Crop ‡∏î‡πâ‡∏ß‡∏¢ Mouse)")

uploaded_images = st.file_uploader("üìÇ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏´‡∏•‡∏≤‡∏¢‡∏†‡∏≤‡∏û)", type=["jpg", "png"], accept_multiple_files=True)
uploaded_frame = st.file_uploader("üñº ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏Å‡∏£‡∏≠‡∏ö (frame.png)", type=["png"])
uploaded_font = st.file_uploader("üî§ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏ü‡∏≠‡∏ô‡∏ï‡πå (.ttf)", type=["ttf"])
font_size = st.number_input("‡∏Ç‡∏ô‡∏≤‡∏î‡∏ü‡∏≠‡∏ô‡∏ï‡πå", value=40)
pos_x = st.number_input("‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á X ‡∏Ç‡∏≠‡∏á‡∏£‡∏´‡∏±‡∏™", value=30)
pos_y = st.number_input("‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á Y ‡∏Ç‡∏≠‡∏á‡∏£‡∏´‡∏±‡∏™", value=1050)

# ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏´‡∏±‡∏™‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
product_codes = {}
crop_boxes = {}

if uploaded_images:
    st.markdown("### ‚úçÔ∏è ‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Ñ‡∏£‡∏≠‡∏õ (Crop Box):")
    for img in uploaded_images:
        default_code = os.path.splitext(img.name)[0]
        code = st.text_input(f"‡∏£‡∏´‡∏±‡∏™‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö {img.name}", value=default_code)
        product_codes[img.name] = code

        st.markdown(f"#### üìç Crop ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö: {img.name}")
        pil_img = Image.open(img)
        coords = streamlit_image_coordinates(pil_img, key=img.name)
        if coords:
            x, y = coords["x"], coords["y"]
            w = st.number_input(f"‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏Ç‡∏≠‡∏á Crop Box ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö {img.name}", min_value=10, max_value=pil_img.width, value=pil_img.width // 2, key=img.name+"w")
            h = st.number_input(f"‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏Ç‡∏≠‡∏á Crop Box ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö {img.name}", min_value=10, max_value=pil_img.height, value=pil_img.height // 2, key=img.name+"h")
            crop_boxes[img.name] = (x, y, x + w, y + h)

if st.button("‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏†‡∏≤‡∏û‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏£‡∏≠‡∏ö"):
    if uploaded_images and uploaded_frame:
        zip_buffer = io.BytesIO()
        with zipfile.ZipFile(zip_buffer, "a", zipfile.ZIP_DEFLATED) as zf:
            frame = Image.open(uploaded_frame).convert("RGBA")
            try:
                if uploaded_font:
                    font = ImageFont.truetype(uploaded_font, font_size)
                else:
                    font = ImageFont.truetype(DEFAULT_THAI_FONT, font_size)
                    st.info("üí° ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î ‚Üí ‡πÉ‡∏ä‡πâ‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô (IBM Plex Sans Thai)")
            except Exception as e:
                st.warning(f"‚ö†Ô∏è ‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏î‡πâ: {e}")
                font = ImageFont.load_default()

            for uploaded_file in uploaded_images:
                img = Image.open(uploaded_file).convert("RGBA")
                box = crop_boxes.get(uploaded_file.name)
                if box:
                    cropped = img.crop(box)
                else:
                    cropped = img
                cropped = cropped.resize(frame.size)
                combined = Image.alpha_composite(cropped, frame)
                draw = ImageDraw.Draw(combined)
                code = product_codes.get(uploaded_file.name, "UNKNOWN")
                draw.text((pos_x, pos_y), f"‡∏£‡∏´‡∏±‡∏™: {code}", font=font, fill=(0, 0, 0, 255))

                img_bytes = io.BytesIO()
                combined.save(img_bytes, format='PNG')
                zf.writestr(f"{code}.png", img_bytes.getvalue())

        st.success("‚úÖ ‡πÄ‡∏™‡∏£‡πá‡∏à‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢! ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á")
        st.download_button("üì¶ ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (ZIP)", data=zip_buffer.getvalue(), file_name="framed_images.zip", mime="application/zip")
    else:
        st.warning("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡πÑ‡∏ü‡∏•‡πå‡∏Å‡∏£‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡∏Å‡πà‡∏≠‡∏ô")
